"""
Django settings for my_apps project.

Generated by 'django-admin startproject' using Django 1.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""
from django.core.urlresolvers import reverse_lazy
import os
os.environ['DJANGO_SETTINGS_MODULE'] = 'Basika.settings'

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
MEDIA_DIR = os.path.join(BASE_DIR, 'media')

AUTHENTICATION_BACKENDS = (

                           'social_core.backends.facebook.FacebookOAuth2',
                           'social_core.backends.twitter.TwitterOAuth',
                           'django.contrib.auth.backends.ModelBackend',
                           'gari.authentication.EmailAuthBackend',

)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'whenindarkletyourheartshowyoutheway'
AUTH_USER_MODEL = 'gari.User'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['mysite.com', 'localhost', '127.0.0.1']

COMPARE_SESSION_ID = 'compare'


# Application definition

INSTALLED_APPS = [
     'embed_video',
     'taggit',
     'dal',
    'dal_select2',
     'basi.apps.BasiConfig',
     'django.contrib.auth',
    'whitenoise.runserver_nostatic',
    'django.contrib.staticfiles',
    'gari.apps.GariConfig',
    'trucks.apps.TrucksConfig',
    'compare.apps.CompareConfig',
    'dal_legacy_static',
    'django.contrib.admin',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'images.apps.ImagesConfig',
    'django_filters',
    'amazon.apps.AmazonConfig',
    'smart_selects',
    'django.contrib.humanize',






    ]


MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'social_django.middleware.SocialAuthExceptionMiddleware',



]

ROOT_URLCONF = 'Basika.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.static',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',

            ],
            'libraries': {
                'movie_tag': 'amazon.templatetags.movie_tag',
                'series_tag': 'amazon.templatetags.series_tag',
                'templatehelper': 'amazon.templatetags.templatehelper',
                 'dealers_tag': 'gari.templatetags.dealers_tag',
                 'deals_tag': 'gari.templatetags.top_deals',
                 'make_tag': 'gari.templatetags.make_tag',
                'news_tag': 'gari.templatetags.news_tag',
                'type_tag': 'gari.templatetags.type_tag',


            },
        },
    },
]

WSGI_APPLICATION = 'Basika.wsgi.application'
WAGTAIL_SITE_NAME = 'News and Events'
USE_DJANGO_JQUERY = True

# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE':
            'django.db.backends.sqlite3',
        'NAME': 'basikabase',
        'USER': 'admin',
        'PASSWORD': '',
        'HOST': 'localhost',

    }
}

ABSOLUTE_URL_OVERRIDES = {
                       'auth.user': lambda u: reverse_lazy('member_detail', args=[u.username])
}

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/
BASE_DIR = os.path.dirname(os.path.abspath(__file__))
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIR = (BASE_DIR, 'static')

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    #'django.contrib.staticfiles.finders.DefaultStorageFinder',
]


BASE_DIR = os.path.dirname(os.path.abspath(__file__))
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')



LOGIN_REDIRECT_URL = reverse_lazy('gari:common')
LOGIN_URL = reverse_lazy('login')
LOGOUT_URL = reverse_lazy('logout')

SOCIAL_AUTH_FACEBOOK_KEY = '572869223226019'
SOCIAL_AUTH_FACEBOOK_SECRET = '3e8942fa2a08fdee1a3745a291ec8564'
SOCIAL_AUTH_TWITTER_KEY = 'a5hPU3aNCNQVeCutMIlV8gqtc'
SOCIAL_AUTH_TWITTER_SECRET = 'F1B23cLYilzgONJG1A9x6R3hwD0QIvGdKjnk7OneyDyF4GWScu'


SOCIAL_AUTH_PIPELINE = (
    'social.pipeline.social_auth.social_details',
    'social.pipeline.social_auth.social_uid',
    'social.pipeline.social_auth.auth_allowed',
    'social.pipeline.social_auth.social_user',
    'social.pipeline.social_auth.associate_by_email',
    'social.pipeline.user.get_username',
    'social.pipeline.user.create_user',
    'social.pipeline.social_auth.associate_user',
    'social.pipeline.social_auth.load_extra_data',
    'social.pipeline.user.user_details',
    'account.pipeline.save_profile',


)


